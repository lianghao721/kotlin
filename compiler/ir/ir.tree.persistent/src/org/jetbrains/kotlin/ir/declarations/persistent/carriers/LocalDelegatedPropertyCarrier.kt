/*
 * Copyright 2010-2020 JetBrains s.r.o. and Kotlin Programming Language contributors.
 * Use of this source code is governed by the Apache 2.0 license that can be found in the license/LICENSE.txt file.
 */

package org.jetbrains.kotlin.ir.declarations.persistent.carriers

import org.jetbrains.kotlin.ir.declarations.IrDeclarationOrigin
import org.jetbrains.kotlin.ir.declarations.IrSimpleFunction
import org.jetbrains.kotlin.ir.declarations.IrVariable
import org.jetbrains.kotlin.ir.expressions.IrConstructorCall
import org.jetbrains.kotlin.ir.symbols.IrSimpleFunctionSymbol
import org.jetbrains.kotlin.ir.symbols.IrSymbol
import org.jetbrains.kotlin.ir.types.IrType

// Auto-generated by compiler/ir/ir.tree/src/org/jetbrains/kotlin/ir/persistentIrGenerator/Main.kt. DO NOT EDIT!

internal interface LocalDelegatedPropertyCarrier : DeclarationCarrier{
    var typeField: IrType
    var delegateField: IrVariable?
    var getterField: IrSimpleFunction?
    var getterSymbolField: IrSimpleFunctionSymbol?
    var setterField: IrSimpleFunction?
    var setterSymbolField: IrSimpleFunctionSymbol?

    override fun clone(): LocalDelegatedPropertyCarrier {
        return LocalDelegatedPropertyCarrierImpl(
            lastModified,
            parentSymbolField,
            originField,
            annotationsField,
            typeField,
            delegateField,
            getterSymbolField,
            setterSymbolField
        )
    }
}

internal class LocalDelegatedPropertyCarrierImpl(
    override val lastModified: Int,
    override var parentSymbolField: IrSymbol?,
    override var originField: IrDeclarationOrigin,
    override var annotationsField: List<IrConstructorCall>,
    override var typeField: IrType,
    override var delegateField: IrVariable?,
    override var getterSymbolField: IrSimpleFunctionSymbol?,
    override var setterSymbolField: IrSimpleFunctionSymbol?
) : LocalDelegatedPropertyCarrier {

    override var getterField: IrSimpleFunction?
        get() = getterSymbolField?.owner
        set(v) {
            getterSymbolField = v?.symbol
        }

    override var setterField: IrSimpleFunction?
        get() = setterSymbolField?.owner
        set(v) {
            setterSymbolField = v?.symbol
        }
}
