/*
 * Copyright 2010-2020 JetBrains s.r.o. and Kotlin Programming Language contributors.
 * Use of this source code is governed by the Apache 2.0 license that can be found in the license/LICENSE.txt file.
 */

package org.jetbrains.kotlin.ir.declarations.persistent.carriers

import org.jetbrains.kotlin.descriptors.DescriptorVisibility
import org.jetbrains.kotlin.descriptors.Modality
import org.jetbrains.kotlin.ir.declarations.IrDeclarationOrigin
import org.jetbrains.kotlin.ir.declarations.IrTypeParameter
import org.jetbrains.kotlin.ir.declarations.IrValueParameter
import org.jetbrains.kotlin.ir.expressions.IrConstructorCall
import org.jetbrains.kotlin.ir.symbols.IrSymbol
import org.jetbrains.kotlin.ir.symbols.IrTypeParameterSymbol
import org.jetbrains.kotlin.ir.symbols.IrValueParameterSymbol
import org.jetbrains.kotlin.ir.types.IrType

// Auto-generated by compiler/ir/ir.tree/src/org/jetbrains/kotlin/ir/persistentIrGenerator/Main.kt. DO NOT EDIT!

internal interface ClassCarrier : DeclarationCarrier{
    var thisReceiverField: IrValueParameter?
    var thisReceiverSymbolField: IrValueParameterSymbol?
    var visibilityField: DescriptorVisibility
    var modalityField: Modality
    var typeParametersField: List<IrTypeParameter>
    var typeParametersSymbolField: List<IrTypeParameterSymbol>
    var superTypesField: List<IrType>

    override fun clone(): ClassCarrier {
        return ClassCarrierImpl(
            lastModified,
            parentSymbolField,
            originField,
            annotationsField,
            thisReceiverSymbolField,
            visibilityField,
            modalityField,
            typeParametersSymbolField,
            superTypesField
        )
    }
}

internal class ClassCarrierImpl(
    override val lastModified: Int,
    override var parentSymbolField: IrSymbol?,
    override var originField: IrDeclarationOrigin,
    override var annotationsField: List<IrConstructorCall>,
    override var thisReceiverSymbolField: IrValueParameterSymbol?,
    override var visibilityField: DescriptorVisibility,
    override var modalityField: Modality,
    override var typeParametersSymbolField: List<IrTypeParameterSymbol>,
    override var superTypesField: List<IrType>
) : ClassCarrier {

    override var thisReceiverField: IrValueParameter?
        get() = thisReceiverSymbolField?.owner
        set(v) {
            thisReceiverSymbolField = v?.symbol
        }

    override var typeParametersField: List<IrTypeParameter> = typeParametersSymbolField.map { it.owner }
}
